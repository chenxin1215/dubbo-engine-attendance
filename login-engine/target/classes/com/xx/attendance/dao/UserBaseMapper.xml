<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xx.attendance.dao.UserBaseMapper">
    <resultMap id="BaseResultMap" type="com.xx.attendance.entity.UserBase">
        <id column="user_base_user_id" jdbcType="BIGINT" property="userId"/>
        <result column="user_base_user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_base_nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="user_base_mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="user_base_user_status" jdbcType="INTEGER" property="userStatus"/>
        <result column="user_base_password" jdbcType="VARCHAR" property="password"/>
        <result column="user_base_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="user_base_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="user_base_head_image" jdbcType="VARCHAR" property="headImage"/>
    </resultMap>
    <sql id="Base_Column_List">
    user_base.user_id as user_base_user_id, user_base.user_name as user_base_user_name, 
    user_base.nick_name as user_base_nick_name, user_base.mobile as user_base_mobile, 
    user_base.user_status as user_base_user_status, user_base.`password` as `user_base_password`, 
    user_base.create_time as user_base_create_time, user_base.update_time as user_base_update_time, 
    user_base.head_image as user_base_head_image
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_base user_base
        where user_base.user_id = #{userId,jdbcType=BIGINT}
    </select>

    <!-- 查询所有 -->
    <select id="getAllUserList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_base user_base
    </select>

    <!-- 根据条件查询user_base -->
    <select id="queryUserByCondition" parameterType="com.xx.attendance.entity.UserBase" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_base
        <trim prefix="where" prefixOverrides="and|or">
            <if test="userName != null">
                and user_name = #{userName, jdbcType=VARCHAR}
            </if>
            <if test="nickName != null">
                and nick_name = #{nickName, jdbcType=VARCHAR}
            </if>
            <if test="mobile != null">
                and mobile = #{mobile, jdbcType=VARCHAR}
            </if>
            <if test="userStatus != null">
                and user_status = #{userStatus, jdbcType=INTEGER}
            </if>
        </trim>
    </select>
    <!-- 根据手机号查询 -->
    <select id="queryUserByMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_base user_base
        where user_base.mobile = #{mobile,jdbcType=VARCHAR}
    </select>
    <!-- 根据登录名查询 -->
    <select id="queryUserByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_base user_base
        where user_base.user_name = #{userName,jdbcType=VARCHAR}
    </select>
    <!-- 根据昵称查询 -->
    <select id="queryUserByNickName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_base user_base
        where user_base.nick_name = #{nickName,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_base
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
    <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.xx.attendance.entity.UserBase"
            useGeneratedKeys="true">
    insert into user_base (user_name, nick_name, mobile, 
      user_status, `password`, create_time, 
      update_time, head_image)
    values (#{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{userStatus,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{headImage,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.xx.attendance.entity.UserBase"
            useGeneratedKeys="true">
        insert into user_base
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                user_name,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="userStatus != null">
                user_status,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="headImage != null">
                head_image,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="userStatus != null">
                #{userStatus,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="headImage != null">
                #{headImage,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xx.attendance.entity.UserBase">
        update user_base
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="headImage != null">
                head_image = #{headImage,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xx.attendance.entity.UserBase">
    update user_base
    set user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=INTEGER},
      `password` = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      head_image = #{headImage,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>